---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: konnectivity-agent
  namespace: kube-system
  name: konnectivity-agent
spec:
  selector:
    matchLabels:
      k8s-app: konnectivity-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: konnectivity-agent
    spec:
      priorityClassName: system-cluster-critical
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
      hostNetwork: true
      volumes:
        - name: pki
          hostPath:
            path: /etc/srv/kubernetes/pki/konnectivity-agent
      containers:
        - image: gcr.io/google-containers/proxy-agent:v0.0.3
          name: konnectivity-agent
          command: ["/proxy-agent"]
          args: [
                  "--logtostderr=true",
                  "--ca-cert=/etc/srv/kubernetes/pki/konnectivity-agent/ca.crt",
                  "--agent-cert=/etc/srv/kubernetes/pki/konnectivity-agent/client.crt",
                  "--agent-key=/etc/srv/kubernetes/pki/konnectivity-agent/client.key",
                  "--proxy-server-host=__APISERVER_IP__",
                  "--proxy-server-port=8132"
                  ]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 50m
              memory: 30Mi
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              port: 8093
              path: /healthz
            initialDelaySeconds: 15
            timeoutSeconds: 15
          volumeMounts:
            - name: pki
              mountPath: /etc/srv/kubernetes/pki/konnectivity-agent
